//Work in progress

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Mission_Mapping
{
    class Line
    {
        public string name;
        public double latitude1;
        public double longitude1;
        public double latitude2;
        public double longitude2;
        public double midpointLat;
        public double midpointLong;

        public Line()
        {
            this.name = "Unk";
            this.latitude1 = 0;
            this.longitude1 = 0;
        }

        public Line(string newName, double newLatitude1, double newLongitude1, double newLatitude2, double newLongitude2)
        {
            this.name = newName;
            this.latitude1 = newLatitude1;
            this.longitude1 = newLongitude1;
            this.latitude2 = newLatitude2;
            this.longitude2 = newLongitude2;
        }

        public void rename(string newName)
        {
            this.name = newName;
        }

        public string midPoint(double lat1, double lon1, double lat2, double lon2)
        {
            //http:// stackoverflow.com/questions/4656802/midpoint-between-two-latitude-and-longitude
            double dLon = (lon2 - lon1) * Math.PI / 180.0;

            //convert to radians
            lat1 = Math.PI * lat1 / 180.0;
            lat2 = Math.PI * lat2 / 180.0;
            lon1 = Math.PI * lon1 / 180.0;
            
            double Bx = Math.Cos(lat2) * Math.Cos(dLon);
            double By = Math.Cos(lat2) * Math.Sin(dLon);
            double lat3 = Math.Atan2(Math.Sin(lat1) + Math.Sin(lat2), Math.Sqrt((Math.Cos(lat1) + Bx) * (Math.Cos(lat1) + Bx) + By * By));
            double lon3 = lon1 + Math.Atan2(By, Math.Cos(lat1) + Bx);

            lat3 = lat3 * (180 / Math.PI);
            lon3 = lon3 * (180 / Math.PI);

            this.midpointLat = Math.Round(lat3, 4);
            this.midpointLong = Math.Round(lon3, 4);

            string output = midpointLat.ToString() + ", " + midpointLong.ToString();

            return output;
        }
    }
}
